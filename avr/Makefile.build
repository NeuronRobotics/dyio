-include ../common/Version.mk
-include ../NR-Clib/toolchain/avr/toolchain.mk
INCLUDES	    = -I../NR-Clib/include/ -I./include/ -I ../common/include -I ../NR-Clib/include/arch/avr -I/usr/lib/avr/include/ 


CPU_SPD       	= 18432000UL
LOW_FUSE     	= 0xce
HIGH_FUSE    	= 0xd9
EXT_FUSE      	= 0xff
CCA             = $(GCCA) $(DYIO_VER) -mmcu=$(DEVICEA) -DF_CPU=$(CPU_SPD) $(INCLUDES)
CC				= $(CCA)

LINK 			= $(GCCA) -lm -L ../NR-Clib/lib/AVR/$(DEVICEA)/ 
OUTPUTDIR       =output/$(DEVICEA)/
OUTPUTDIR_DEBUG =output/$(DEVICEA)_debug/

OBJDUMP = avr-objdump -t -l

CFILES := $(wildcard ../common/src/*/*.c) \
$(wildcard src/*.c) \
$(wildcard src/*/*.c) 

OFILES := $(CFILES:%.c=%.o)
DFILES := $(CFILES:%.c=%.d)

all:clean release debug
	
	echo AVR Build OK!
	avr-size --format=avr --mcu=$(DEVICEA) $(OUTPUTDIR)/output.elf
	avr-size --format=avr --mcu=$(DEVICEA) $(OUTPUTDIR_DEBUG)/output.elf
	
release: $(OFILES)
	rm -rf $(OUTPUTDIR)
	mkdir -p $(OUTPUTDIR)
	$(LINK)  -mmcu=$(DEVICEA) $(OFILES) -lNRLIB -o $(OUTPUTDIR)output.elf
	cd $(OUTPUTDIR); $(BIN2HEXAVR) -R .eeprom -O ihex output.elf  "output.hex"
	
	
debug: $(OFILES)
	rm -rf $(OUTPUTDIR_DEBUG)
	mkdir -p $(OUTPUTDIR_DEBUG)
	$(LINK)  -mmcu=$(DEVICEA) $(OFILES) -lNRLIB_debug -o $(OUTPUTDIR_DEBUG)output.elf
	cd $(OUTPUTDIR_DEBUG); $(BIN2HEXAVR) -R .eeprom -O ihex output.elf  "output.hex"
	
	
size:all
	cp ../NR-Clib/lib/AVR/atmega644p/libNRLIB_debug.a output/o/
	cd output/o/;ar x libNRLIB_debug.a
	sh size.sh
	avr-size --format=avr --mcu=$(DEVICEA) $(OUTPUTDIR)/output.elf
	avr-size  --mcu=$(DEVICEA) $(OUTPUTDIR)/output.elf	
	$(OBJDUMP) -j .bss $(OUTPUTDIR)/output.elf > output.elf.txt
	$(OBJDUMP) -j .data $(OUTPUTDIR)/output.elf >> output.elf.txt
	$(OBJDUMP) -j .noinit $(OUTPUTDIR)/output.elf >> output.elf.txt
	avr-size --format=avr --mcu=$(DEVICEA) $(OUTPUTDIR_DEBUG)/output.elf
	avr-size --mcu=$(DEVICEA) $(OUTPUTDIR_DEBUG)/output.elf
	$(OBJDUMP) -j .bss $(OUTPUTDIR_DEBUG)/output.elf > output.elf_debug.txt
	$(OBJDUMP) -j .data $(OUTPUTDIR_DEBUG)/output.elf >> output.elf_debug.txt
	$(OBJDUMP) -j .noinit $(OUTPUTDIR_DEBUG)/output.elf >> output.elf_debug.txt
%.o: %.c
	$(CC) -c $< -o $@
	mkdir -p output/o/
	cp $@ output/o/
clean:
	rm -rf output/o/*
	rm -rf $(OFILES) $(DFILES)